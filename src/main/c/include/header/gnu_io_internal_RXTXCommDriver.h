/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class gnu_io_internal_RXTXCommDriver */

#ifndef _Included_gnu_io_internal_RXTXCommDriver
#define _Included_gnu_io_internal_RXTXCommDriver
#ifdef __cplusplus
extern "C" {
#endif
#undef gnu_io_internal_RXTXCommDriver_debug
#define gnu_io_internal_RXTXCommDriver_debug 0L
#undef gnu_io_internal_RXTXCommDriver_devel
#define gnu_io_internal_RXTXCommDriver_devel 0L
/*
 * Class:     gnu_io_internal_RXTXCommDriver
 * Method:    registerKnownPorts
 * Signature: (I)[java.lang.String;
 */
JNIEXPORT jobjectArray JNICALL Java_gnu_io_internal_RXTXCommDriver_registerKnownPorts
  (JNIEnv *, jobject, jint);

/*
 * Class:     gnu_io_internal_RXTXCommDriver
 * Method:    isPortPrefixValid
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_gnu_io_internal_RXTXCommDriver_isPortPrefixValid
  (JNIEnv *, jobject, jstring);

/*
 * Class:     gnu_io_internal_RXTXCommDriver
 * Method:    testRead
 * Signature: (Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_gnu_io_internal_RXTXCommDriver_testRead
  (JNIEnv *, jobject, jstring, jint);

/*
 * Class:     gnu_io_internal_RXTXCommDriver
 * Method:    testExists
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_gnu_io_internal_RXTXCommDriver_testExists
  (JNIEnv *, jobject, jstring);

/*
 * Class:     gnu_io_internal_RXTXCommDriver
 * Method:    getDeviceDirectory
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_gnu_io_internal_RXTXCommDriver_getDeviceDirectory
  (JNIEnv *, jobject);

/*
 * Class:     gnu_io_internal_RXTXCommDriver
 * Method:    nativeGetVersion
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_gnu_io_internal_RXTXCommDriver_nativeGetVersion
  (JNIEnv *, jclass);
/*
 * Class:     gnu_io_internal_RXTXCommDriver$Observer
 * Method:    observe
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_gnu_io_internal_RXTXCommDriver_observe
(JNIEnv *, jclass);

/*
 * Class:     gnu_io_internal_RXTXCommDriver$Observer
 * Method:    unobserve
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_gnu_io_internal_RXTXCommDriver_unobserve
(JNIEnv *, jclass);

/*
 * Class:     gnu_io_internal_RXTXCommDriver$Observer
 * Method:    registerObserver
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_gnu_io_internal_RXTXCommDriver_registerObserver
(JNIEnv *, jobject);

/*
 * Class:     gnu_io_internal_RXTXCommDriver$Observer
 * Method:    unregisterObserver
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_gnu_io_internal_RXTXCommDriver_unregisterObserver
(JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
